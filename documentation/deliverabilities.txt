# from game_env import Game_Env
# from ai1 import 

# env = Game_Env()

# this could prob be done best with a scrip file that runs ai1.py and ai2.py altertating
# pass in 
# the functions inside this should take in current 

# competitors will only write one function to submit:
# ai(env) --> action
# the game runer will then use this action to perform out the game


# people using RL will also need to define their own reward function
# reward function will need to be defined as 
# reward(state, state_prime) --> reward
# only intested in what has changed in the state of the game, then you can write code to check state attribute diferences and determine positive and negativer values for reward
# let users use default rward function logic in envionrment by setting speicfic reward values for hard coded game outcomes
# set_rewards(rewards) --> None
# rewards is a list of a reward values for speicific outcomes
# EX: rewards get mapped to [win, lose, ]

# for players using RL, in order to train, they make steps in the eviornment and 

ai vs ai architecture
- given the ai file from both team members, 

human vs human architecture

====
what do we want contestants to have access to?
- Have access to envionrment library for their specific game language (python, c++, and java)
- Have ai file for their language for them to fill out their function

===
- What do we want organizers to have access to?
- Be able to easily to simulate games with an ai
- store all team ai files in a directory called ai